--2019.12.20 3장. JOIN
SELECT * FROM EMP;
SELECT * FROM DEPT;

--(1)CROSS JOIN
SELECT * 
    FROM EMP, DEPT 
    WHERE ENAME='SMITH';   

--(2)EQUI JOIN : 2개의 테이블에 동일한 필드가 있는 경우(DEPT, EMP테이블에 DEPTNOO)
SELECT * 
    FROM EMP, DEPT
    WHERE ENAME='SMITH' AND EMP.DEPTNO=DEPT.DEPTNO;
SELECT * 
    FROM EMP, DEPT
    WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT E.*, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
--사번, 이름, 부서번호, 부서이름, 근무지
SELECT EMPNO, ENAME, E.DEPTNO, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
-- 사번, 이름, 급여, 부서번호(부서코드), 부서명
SELECT EMPNO, ENAME, EMP.SAL, DEPT.DEPTNO, DNAME
    FROM EMP, DEPT  
    WHERE EMP.DEPTNO=DEPT.DEPTNO;
--이름, 업무, 급여, 부서명, 근무지, 급여가 2000이상
SELECT ENAME, JOB, SAL, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000;
--이름, 업무, 급여, 부서명, 근무지, 근무지가 CHICAGO
SELECT ENAME, JOB, SAL, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
--이름, 업무, 근무지. DEPTYNO이 10또는 20인경우, 급여순 정렬
SELECT ENAME, JOB, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND D.DEPTNO IN(10,20)
    ORDER BY SAL;
--이름, 급여, COMM, "연봉", 부서명, 근무지.연봉=(SAL+COMM)12 
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM, 0))*12 "연봉",DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
--위에서 JOB이 SALESMAN이거나 MANAGER를 대상으로 연봉이 큰 순서대로 출력
SELECT ENAME, SAL,NVL(COMM, 0) "COMM", (SAL+NVL(COMM, 0))*12 "연봉",DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB IN('SALESMAN','MANAGER')
    ORDER BY "연봉" DESC;
--이름, 급여, 입사일, 부서코드(번호), 부서명. COMM이 NULL이고 급여가 1200이상인 경우.
--부서명순 정렬.부서명이 같으면 급여큰 순
SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL>=1200
    ORDER BY DNAME, SAL DESC;
    
--­	뉴욕에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT ENAME, SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--­	ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, HIREDATE
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND DNAME='ACCOUNTING';
--­	직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
--­	Comm이 null이 아닌 사원의 이름, 급여, 부서코드, 근무지를 출력하시오
SELECT ENAME, SAL, D.DEPTNO, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
    
--(3)NON-EQUI JOIN (동일한 필드가 없는 2개의 테이블을 JOIN)
SELECT *
    FROM SALGRADE;
SELECT ENAME, SAL, GRADE||'등급' GRADE
    FROM EMP,SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
    
--­	Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서번호, 부서이름, 근무지를 출력하시오.
SELECT ENAME, SAL, GRADE, D.DEPTNO, DNAME, LOC
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO;
---	이름, 급여, 입사일, 급여등급. 급여등급 큰 순서대로 정렬
SELECT ENAME, SAL, HIREDATE, GRADE
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY GRADE DESC;
---	이름, 급여, 입사일, 급여등급, 부서명, 근무지
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO;
---	이름, 급여, 등급, 부서코드, 근무지. 단 comm 이 null아닌 경우
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
---	이름, 급여, 급여등급, 연봉, 부서명, 부서별 출력, 부서가 같으면 연봉순. 연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM, 0))*12 "연봉", DNAME
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO
    ORDER BY DNAME, 연봉;
---	이름, 업무, 급여, 등급, 부서코드, 부서명 출력. 급여가 1000~3000사이. 정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT ENAME, JOB, SAL, GRADE, D.DEPTNO, DNAME
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO AND SAL BETWEEN 1000 AND 3000
    ORDER BY DNAME, JOB, SAL DESC;
---	이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT ENAME, SAL, GRADE, TO_CHAR(HIREDATE,'YYYY-MM-DD DAY') HIREDATE, LOC
    FROM DEPT D, EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO AND TO_CHAR(HIREDATE,'yyyy')='1981'
    ORDER BY GRADE DESC;

--(4) SELF JOIN : 한테이블을 서로 JOIN
SELECT WORKER.ENAME, MANAGER.ENAME "상사" 
    FROM EMP WORKER, EMP MANAGER
    WHERE WORKER.MGR = MANAGER.EMPNO;
--XX의 상사는 XX다
SELECT W.ENAME||'의 상사는 '|| M.ENAME "상사" 
    FROM EMP W, EMP M
    WHERE W.MGR = M.EMPNO; 
--­	매니저가 KING인 사원들의 이름과 직급을 출력하시오.
SELECT W.ENAME, W.JOB ,M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR = M.EMPNO AND M.ENAME = 'KING'; 
--­	SCOTT과 동일한 부서번호에서 근무하는 사원의 이름을 출력하시오
SELECT W1.ENAME
    FROM EMP W1, EMP W2 
    WHERE W1.DEPTNO = W2.DEPTNO AND W2.ENAME = 'SCOTT' AND W1.ENAME!='SCOTT'; 
 --­	SCOTT과 동일한 근무지에서 근무하는 사원의 이름을 출력하시오   
SELECT E1.ENAME
    FROM EMP E1, EMP E2, DEPT D1, DEPT D2
    WHERE E1.DEPTNO = D1.DEPTNO AND E2.DEPTNO = D2.DEPTNO AND D1.LOC=D2.LOC AND E2.ENAME = 'SCOTT' AND E1.ENAME!='SCOTT';

SELECT * FROM DEPT;
INSERT INTO DEPT VALUES(50,'IT','DALLAS');
SELECT * FROM EMP;
INSERT INTO EMP VALUES(9999,'홍길동','MANAGER',7902,'19/12/20',1000,NULL,50);
ROLLBACK;       --INSERT 취소

--(5) OUTER JOIN : 조인 조건에 만족하지 않는 행을 나타나게하는 조인
SELECT W.ENAME "부하",W.MGR,M.EMPNO, M.ENAME "직속상사"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
--XX의 매니저는 ㅌㅌ(無)입니다.
SELECT W.ENAME ||'의 매니저는 '|| NVL(M.ENAME,'無') ||'입니다.'
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+); 
SELECT W.ENAME, M.ENAME
    FROM EMP W,EMP M
    WHERE W.MGR(+)=M.EMPNO;
--말단사원들
SELECT M.ENAME
    FROM EMP W,EMP M
    WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL;
    
--EQUI JOIN에서 손실된 데이터
SELECT * FROM EMP; --14명(10,20,30)
SELECT * FROM DEPT; --4개부서(10,20,30,40)
SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO(+)=DEPT.DEPTNO;
--이름, 업무(JOB), 부서명(DNAME), 급여(SAL) 출력(단, 직원이 없는 부서명도 함께 출력)부서명, 급여큰순 정렬 
SELECT NVL(ENAME,'-') ENAME, NVL(JOB,'-') JOB, DNAME, NVL(TO_CHAR(SAL,'9,999'),'-') SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO(+)=D.DEPTNO
    ORDER BY DNAME, SAL DESC;
    
    
    
    
    
    
    
    
    
    
    
    

