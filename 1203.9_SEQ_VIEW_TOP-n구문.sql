--SEQUENCE : 순차번호 자동 생성 객체 (PRIMARY KEY에서 순차번호 생성이 필요할 때)
--친구이름, 전화, 최종수정일
DROP SEQUENCE FRIEND_SEQno;
CREATE SEQUENCE FRIEND_SEQno --1,2,3...
    INCREMENT BY 1 --등차
    START WITH 1 --초항
    MAXVALUE 9999
    MINVALUE 1
    NOCYCLE
    NOCACHE;
CREATE TABLE FRIEND(
    NUM NUMBER(4) PRIMARY KEY,
    NAME VARCHAR2(50),
    TEL VARCHAR2(30) UNIQUE,
    LAST_MODIFIED DATE DEFAULT SYSDATE);
INSERT INTO FRIEND(NUM, NAME, TEL) 
        VALUES(FRIEND_SEQno.NEXTVAL,'홍길동','010-9999');
INSERT INTO FRIEND(NUM, NAME, TEL) 
         VALUES(FRIEND_SEQno.NEXTVAL,'김길동','010-8888');
INSERT INTO FRIEND(NUM, NAME, TEL) 
        VALUES(FRIEND_SEQno.NEXTVAL,'이길동','010-7767');
SELECT * FROM FRIEND;
SELECT FRIEND_SEQno.CURRVAL FROM DUAL;

CREATE SEQUENCE FRIEND_SEQ
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
    
--VIEW(가상의 테이블)
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP;
SELECT * FROM EMPV0;
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME FROM DEPT D, EMP E
        WHERE D.DEPTNO=E.DEPTNO;
SELECT * FROM EMPv0;

--부서번호가 30번부서 직원들만 EMPv1 뷰 생성
CREATE OR REPLACE VIEW EMPv1
    AS SELECT * FROM EMP
        WHERE DEPTNO=30;
SELECT * FROM EMPv1;
INSERT INTO EMPv1 VALUES (1111,'홍',NULL,NULL,SYSDATE,NULL,NULL,40);
SELECT * FROM EMP;
CREATE OR REPLACE VIEW EMPv1
    AS SELECT * FROM EMP WHERE DEPTNO=30 WITH CHECK OPTION; -- 30 부서의 직원만 W/R가능
INSERT INTO EMPv1 VALUES (1112,'홍',NULL,NULL,SYSDATE,NULL,NULL,40);--X
INSERT INTO EMPv1 VALUES (1112,'홍',NULL,NULL,SYSDATE,NULL,NULL,30);
CREATE OR REPLACE VIEW EMPv2
    AS SELECT * FROM EMP WHERE DEPTNO=30 WITH READ ONLY;    -- SELECT ONLY
INSERT INTO EMPv2 VALUES (1113,'홍',NULL,NULL,SYSDATE,NULL,NULL,30); --X
--INSERT 불가
CREATE OR REPLACE VIEW EMPv3
    AS SELECT ENAME, SAL, COMM FROM EMP;
INSERT INTO EMPv3 VALUES('홍',9000,5000); --나머지 빈칸때문에 x
CREATE OR REPLACE VIEW SALv1
    AS SELECT EMPNO, ENAME, SAL*12 YEARSAL FROM EMP WHERE DEPTNO=10;--연산엔 ALIAS있어야 함.
SELECT * FROM SALv1 WHERE YEARSAL>20000;
CREATE OR REPLACE VIEW SALv1 (ID, NAME, YEARSAL)
    AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO=10;
INSERT INTO SALv1 VALUES(119,'홍',12000); --X

CREATE OR REPLACE VIEW DEPTv1 (DEPTNO, MINSAL ,MAXSAL, AVGSAL)
    AS SELECT DEPTNO, MIN(SAL), MAX(SAL), AVG(SAL) FROM EMP GROUP BY DEPTNO;
CREATE OR REPLACE VIEW JOBLIST
    AS SELECT DISTINCT JOB, DEPTNPO FROM EMP;
    
-- INLINE VIEW : FROM 절의 SUBQUREY
-- 급여가 2000을 초과하는 사뤈의 평균 급여출력
SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL>2000);
--이름, 급여, 부서번호, 해당사원의 부서평균급여
SELECT ENAME, SAL, DEPTNO, (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO) FROM EMP E;
DELETE FROM EMP WHERE DEPTNO=40;
DELETE FROM EMP WHERE ENAME='홍';
-- 각 부서에서 부서 평균급여보다 높은 사원의 이름, 급여, 부서번호, 부서급여 평균
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO;
SELECT E.ENAME, E.SAL, E.DEPTNO, S.AVGSAL
    FROM EMP E, (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
    WHERE E.DEPTNO=S.DEPTNO;
--이름, 급여, 부서번호, 부서평균급여 (부서평균보다 많이 받는 사원만 출력)
SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO;
SELECT ENAME, SAL, S.DEPTNO, AVGSAL 
    FROM EMP, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
    WHERE EMP.DEPTNO=S.DEPTNO AND EMP.SAL>S.AVGSAL;

-- TOP-N 구문
SELECT ROWNUM, ENAME, SAL FROM EMP; --RPWNUM=EMP테이블에서 가져온 순서
--SAL 등수, ENAME, SAL
SELECT ROWNUM, ENAME, SAL FROM EMP ORDER BY SAL DESC; --가져온 후에 나중에 정렬함->SAL등수로 못함.
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL DESC) WHERE ROWNUM<6;
--6~10등을 뿌리고 싶다
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 6 AND 10; --못가져오고 다 버림.
SELECT RN, ENAME, SAL FROM (SELECT ROWNUM RN,A.* FROM (SELECT * FROM EMP ORDER BY SAL DESC) A)
    WHERE RN BETWEEN 6 AND 10;

-- 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수) ? 친구출제
SELECT DEPTNO, SS, ROWNUM FROM (SELECT DEPTNO, SUM(SAL) SS FROM EMP GROUP BY DEPTNO ORDER BY SUM(SAL) DESC);
-- 부서명과 사원명을 출력하는 DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM DNAME_ENAME_VU;
--사원명과 직속상관명을 출력하는 WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
    AS SELECT W.ENAME "WORKER", M.ENAME "MASTER" FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
SELECT * FROM WORKER_MANAGER_VU;
--사원테이블에서 사번, 사원명, 입사일을 입사일이 늦은 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC;
--사원테이블에서 사번, 사원명, 입사일을 입사일이 늦은 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC) WHERE ROWNUM<6;
--사원 테이블에서 사번, 사원명, 입사일을 입사일이 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT EMPNO, ENAME, HIREDATE 
    FROM (SELECT ROWNUM RN,EMPNO, ENAME, HIREDATE 
        FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 6 AND 10;

 