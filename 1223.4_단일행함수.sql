--4장 단일행 함수
SELECT ENAME, TO_CHAR(HIREDATE, 'RR-MM-DD DAY AM HH:MI:SS') FROM EMP;
SELECT SUM(SAL) FROM EMP;   --EMP테이블의 SAL들의 합-그룹함수(다중행함수)
SELECT DEPTNO, SUM(SAL)
    FROM EMP
    GROUP BY DEPTNO;    --그룹행 함수

--단일행 함수의 종류 : 숫자관련함수, 문자처리함수, 날짜관련함수, 형변환함수, NULL, DECODE, ETC.
--(1)숫자 관련 함수
SELECT ABS(-9)FROM EMP;
--아무 의미 없는 1행짜리 테이블:U
SELECT * FROM DUAL;

--내림
SELECT FLOOR(34.5678)FROM DUAL;--소수점 이하를 내림
SELECT FLOOR(34.5678*10)/10 FROM DUAL;
SELECT TRUNC(34.5678,2) FROM DUAL; --소수점 몇가지까지 내림
SELECT TRUNC(156.54,-1) FROM DUAL;
--이름, SAL(백의자리 내림으로 출력)
SELECT ENAME, TRUNC(SAL,-3) FROM EMP;

--반올림
SELECT ROUND(34.5678) FROM DUAL; --소수점에서 반올림
SELECT ROUND(34.5678,3) FROM DUAL;
SELECT ROUND(34.5678,-1) FROM DUAL;
--이름, SAL(백의자리 반올림 출력)
SELECT ENAME, ROUND(SAL,-3) FROM EMP;

--올림
SELECT CEIL(34.5678) FROM DUAL;

SELECT FLOOR(10/4) FROM DUAL; --LIKE JAVA
SELECT POWER(3,2) FROM DUAL; --3^2=9
SELECT MOD(9,2) FROM DUAL;
--홀수달에 입사한 직원돌의 모든 필드 출력
SELECT * 
    FROM EMP
    WHERE MOD(TO_CHAR(HIREDATE,'MM'),2)=1;


--(2)문자 관련함수
SELECT UPPER('ABCabc') FROM DUAL;--대문자로
SELECT LOWER('ABCabc') FROM DUAL;--소문자로
SELECT INITCAP('abcABC') FROM DUAL;--첫글자만 대문자로.
--JOB=MANAGER인 직원의 모든 필드
SELECT *
    FROM EMP
    WHERE UPPER(JOB)='MANAGER';
SELECT EMPNO, INITCAP(ENAME), INITCAP(JOB)
    FROM EMP;
--CONCAT(A,B)
SELECT CONCAT(CONCAT('ABC','DEF'),'GHI') FROM DUAL;
--???는 JOB이다.
SELECT CONCAT(CONCAT(ENAME,'는 '),CONCAT(JOB,'이다')) TITLE --TITLE이 있어야 자바에서 가능(특수문자,숫자시작 불가능)
    FROM EMP;
--SUBSTR(STR, 시작할위치, 추출할갯수) 첫번째 위치가 1.
--SUBSTRB(STR, 시작할위치, 추출할갯수) 첫번째 위치가 1.
SELECT SUBSTR('welcom to Oracle',3,2) FROM DUAL; ---'lc'
SELECT SUBSTR('welcom to Oracle',-3,3) FROM DUAL; --'cle'
--SUBSTR이용, 짝수일자에 입사한 직원의 모든 필드(날짜 표준 가정)
SELECT *
    FROM EMP
    WHERE MOD(SUBSTR(HIREDATE,-1,1),2)=0;
SELECT SUBSTR('데이터베이스',2,2) FROM DUAL; --이터
SELECT SUBSTRB('데이터베이스',4,6) FROM DUAL; --BYTE
--9월에 입사한 사원의 모든 필드를 출력
SELECT *
    FROM EMP
    WHERE HIREDATE LIKE '%/09/%';
--SUBSTR()함수
SELECT *
    FROM EMP
    WHERE SUBSTR(HIREDATE,4,2)='09';
--TO_CHAR() 함수
SELECT *
    FROM EMP
    WHERE TO_CHAR(HIREDATE,'MM')='09';
SELECT *
    FROM EMP
    WHERE TO_CHAR(HIREDATE,'MM')=9;
SELECT SUBSTR('ABCD',2,3)
    FROM EMP;
--LENGTH(문자), LENGTHB
SELECT LENGTH('ABCD'), LENGTHB('ABCD') FROM DUAL;
SELECT LENGTH('오라클'), LENGTHB('오라클') FROM DUAL;
--INSTR(STRING, 찾을글자) : STRING에서 찾을글자의 위치
--INSTR(STRING, 찾을글자, 시작위치) : STRING에서 찾을글자의 위치
--INSTR(STRING, 찾을글자, 시작위치, K) : STRING에서 찾을글자의 K번째 위치
SELECT INSTR('ABCABCABC','B') FROM DUAL;
SELECT INSTR('ABCABCABC','B',3) FROM DUAL;
SELECT INSTR('ABCABCABC','B',3,2) FROM DUAL;
--9월에 입사한 직원
SELECT *
    FROM EMP
    WHERE INSTR(HIREDATE,'09') = 4;
--LPAD/RPAD(STRING, 10, '*')
SELECT LPAD('ORACLE',20,'#') FROM DUAL;
SELECT RPAD('ORACLE',20,'#') FROM DUAL;
SELECT ENAME, LPAD(SAL,6,'*') FROM EMP;
--TRIM, LTRIM, RTRIM
SELECT TRIM('       ORACLE DB      ')FROM DUAL;
SELECT LTRIM('       ORACLE DB      '),RTRIM('       ORACLE DB      ')FROM DUAL;
SELECT TRIM('a' FROM 'aaaORACLE DBaaa') FROM DUAL;
--REPLACE(문자, 원글자, 바꿀글자)
SELECT REPLACE('abcabc','a','999') FROM DUAL;
--83년도에 입사한 직원을 알아내기 위해 SUBSTR 함수를 이용하여 HIREDATE 컬럼에서 
--첫 글자부터 2개를 추출하여 그 값이 83인지를 체크하는 방법으로도 구해 보도록 하세요. 
SELECT *
    FROM EMP
    WHERE SUBSTR(HIREDATE,1,2)=83;
--다음은 이름이 E로 끝나는 사원을 검색해 보도록 합시다. 
--SUBSTR 함수를 이용하여 ENAME 컬럼의 마지막 문자 한개만 추출해서 이름이 E로 끝나는 사원을 검색해 보도록 하시오. 
SELECT *
    FROM EMP
    WHERE SUBSTR(ENAME, -1,1)='E';
--이름이 E로 끝나는 사원의 이름(****E)출력하기
SELECT LPAD(SUBSTR(ENAME, -1,1),5,'*')
    FROM EMP
    WHERE SUBSTR(ENAME, -1,1)='E';
--사번, 이름(S****), 직책, 입사일(81/09/**)
SELECT EMPNO, RPAD(SUBSTR(ENAME, -1,1),5,'*'), JOB, RPAD(SUBSTR(HIREDATE, 1,6),8,'*')
    FROM EMP;
--사번, 이름, 직책을 출력(직책은 이름의 문자열 수만큼만표시)


--(3) 날짜관련 예약어와 함수
SELECT SYSDATE FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YY-MM-DD MON MONTH DAY HH24:MI:SS','NLS_DATE_LANGUAGE=ENGLISH')FROM DUAL;
SELECT SYSDATE-1 "어제", SYSDATE+1 "내일" FROM DUAL;
SELECT TO_CHAR(SYSDATE+14, 'YY-MM-DD HH24') FROM DUAL;
--이름,입사일,근무일자
SELECT ENAME,HIREDATE, TRUNC(SYSDATE-HIREDATE) "근무일자" FROM EMP;
SELECT ENAME, HIREDATE, TRUNC((SYSDATE-HIREDATE)/365) "근무년도" FROM EMP;
--MONTH_BETWEEN
SELECT ENAME, HIREDATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)) "근무달수" FROM EMP;
SELECT ENAME, TRUNC(MONTHS_BETWEEN(HIREDATE, SYSDATE)) FROM EMP;
--ADD_MONTHS(특정날짜, N) : 특정날짜에서 N개월 후
--ENAME, HIREDATE, 수습기간의 마지막날(6개월)
SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE,6) FROM EMP;
--NEXT_DAY(특정날짜, '수') 특정날짜후 처음 도래하는 요일
SELECT SYSDATE, NEXT_DAY(SYSDATE,'월')FROM DUAL;
--사원이름, 입사일, 입사후 맞는 첫주말
SELECT ENAME, HIREDATE, NEXT_DAY(SYSDATE, '토') FROM EMP;
--LAST_DAY(특정날짜) ; 특정날짜인 달의 말날
--ENAME, 입사일, 회사의 월급날(말일)
SELECT ENAME, HIREDATE, LAST_DAY(HIREDATE) FROM EMP;
--이 달의 말일
SELECT LAST_DAY(SYSDATE) FROM DUAL;
--ROUND(반올림),TRUNC(버림) - YEAR, MONTH, DAY, DEFAULT
SELECT ROUND(SYSDATE, 'YEAR') FROM DUAL;
SELECT TRUNC(SYSDATE, 'YEAR') FROM DUAL;
SELECT ROUND(SYSDATE, 'MONTH') FROM DUAL;
SELECT TRUNC(SYSDATE, 'MONTH') FROM DUAL;
SELECT TRUNC(SYSDATE, 'DAY') FROM DUAL;
SELECT ROUND(TO_DATE('191226','YYMMDD'),'DAY') FROM DUAL;
SELECT TRUNC(TO_DATE('191226','YYMMDD'),'DAY') FROM DUAL;
SELECT ROUND(SYSDATE) FROM DUAL; --DEFAULT 반올림 결과:0시 0분 0초
SELECT TO_CHAR(ROUND(SYSDATE),'YY-MM-DD HH24:MI:SS') FROM DUAL;
SELECT TO_CHAR(TRUNC(SYSDATE),'YY-MM-DD HH24:MI:SS') FROM DUAL;

--ENAME, 입사일, 입사일달의 1일
SELECT ENAME, HIREDATE, TRUNC(HIREDATE,'MONTH') FROM EMP;
--ENAME, 입사일, 월급날(말일)
SELECT ENAME, HIREDATE, LAST_DAY(HIREDATE) PAYDAY FROM EMP;
--ENAME, 입사일, 월급날(25일)
SELECT ENAME, HIREDATE, ROUND(HIREDATE-9,'MONTH')+24 PAYDAY FROM EMP;
--ENAME, 입사일, 월급날(17일)
SELECT ENAME, HIREDATE, ROUND(HIREDATE-1,'MONTH')+16 PAYDAY FROM EMP;
--ENAME, 입사일, SAL(월급), 이때까지 받은 월급 합
SELECT ENAME, HIREDATE, SAL, TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE ))*SAL FROM EMP;
--ENAME, 입사일, SAL, COMM, 이때까지 받은 총액
SELECT ENAME, HIREDATE, SAL, COMM, SAL*TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE))+NVL(COMM,0)*TRUNC((SYSDATE-HIREDATE)/365)
    FROM EMP;

--(4) 형변환함수
--TO_CHAR(날짜, 패턴) 날짜를 문자로
--YY, MM, DD, DAY/DY, AM HH/HH24, MI, SS
--패턴내에 알파벳이나 특수문자 사용가능외래어일경우 ""
SELECT ENAME, SAL, TO_CHAR(HIREDATE,'YYYY/MON/DD DAY AM HH:MI:SS') FROM EMP;
SELECT TO_CHAR(SYSDATE, 'YY"년"MM"월"DD DAY HH"시"MI"분"SS"초"') FROM DUAL; 
SELECT TO_CHAR(SYSDATE, 'MM-DD') FROM DUAL;
--TO_CHAR(숫자, 패턴) 숫자를 문자로
--패턴내 0(자릿수, 자릿수 맞지않으면 0표시.)
--      9(자릿수, 자릿수가 맞지 않으면 채우지 않는다.)
--      L(지역 통화단위 붙음)
--      $($통화단위)
--      ,(1000단위 표시)
SELECT ENAME, SAL, TO_CHAR(SAL, 'L000,000.0') FROM EMP;
SELECT ENAME, SAL, TO_CHAR(SAL, '$999,990.9') FROM EMP;
--TO_DATE(문자, 패턴) 문자를 날짜형로
--DATE_FORMAT을 모른 상태에서 81년5월1일부터 83년5월1일 사이에 입사한 직원들의 모든 필드
SELECT * FROM EMP 
    WHERE HIREDATE BETWEEN TO_DATE('810501','RRMMDD') AND TO_DATE('830501','RRMMDD');
--2019,8,1로 부터 오늘이 몇일째인지
SELECT CEIL(SYSDATE - TO_DATE('190801','YYMMDD')) FROM DUAL;
--TO_NUMBER(문자, 패턴)문자를 숫자로 '9,876'->9876
SELECT TO_NUMBER('1,000','9,999')+1000 FROM DUAL;

--(5)NULL 관련 함수=NVL(널일수도 있는 데이터, 널이면 대신 쓸 값)
--사원이름, 상사의 이름(상사가 없으면 'CEO'라고 출력)
SELECT W.ENAME, NVL(M.ENAME,'CEO')
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
--사원이름, MGR(MGR이 NULL이면 'CEO'라고 출력)
SELECT ENAME, NVL(TO_CHAR(MGR),'CEO') MGR
    FROM EMP;

--(6) DECODE(데이터, 값1, 결과1, 값2, 결과2, 값3, 결과3,...값N, 결과N, 그외결과)
SELECT DEPTNO, SUM(SAL) FROM EMP GROUP BY DEPTNO;
SELECT JOB, SUM(SAL) FROM EMP GROUP BY JOB;
SELECT ENAME, E.DEPTNO, DNAME
    FROM EMP E,DEPT D
    WHERE W.DEPTNO=D.DEPTNO;
SELECT ENAME, DEPTNO, DECODE(DEPTNO,10,'ACCOUNTING',20,'RESEARCH',
                                    30,'SALES',40,'OPERATIONS','ETC') AS "DNAME"
    FROM EMP;
SELECT ENAME, DEPTNO, CASE WHEN DEPTNO=10 THEN 'ACCOUNTING'
                           WHEN DEPTNO=20 THEN 'RESEARCH'
                           WHEN DEPTNO=30 THEN 'SALES'
                           WHEN DEPTNO=40 THEN 'OPERATIONS'
                           ELSE 'ETC' END AS "DNAME" FROM EMP;
SELECT ENAME, DEPTNO, CASE DEPTNO WHEN 10 THEN 'ACCOUNTING'
                                  WHEN 20 THEN 'RESEARCH'
                                  WHEN 30 THEN 'SALES'
                                  WHEN 40 THEN 'OPERATIONS'
                                  ELSE 'ETC' END AS "DNAME" FROM EMP;
--기존의 SAL를 이용해서 조정될 SAL은 JOB에 따라 'ANALYST' 10%인상, 'SALESMAN' 20%인상, 'MANAGER' 30%이상, 'CLERK' 40%인상
--사번, 이름, 조정전SAL, 인상된 SAL
SELECT EMPNO, ENAME, SAL, CASE JOB WHEN 'ANALYST' THEN SAL*1.1 
                                   WHEN 'SALESMAN' THEN SAL*1.2
                                   WHEN 'MANAGER' THEN SAL*1.3
                                   WHEN 'CLERK' THEN SAL*1.4
                                   ELSE SAL END AS "인상된SAL" FROM EMP;
SELECT EMPNO, ENAME, SAL, DECODE(JOB, 'ANALYST', SAL*1.1, 'SALESMAN', SAL*1.2, 
                                    'MANAGER', SAL*1.3, 'CLERK', SAL*1.4, SAL) AS "인상된SAL" FROM EMP;
--입사한 년도만
SELECT TO_CHAR(HIREDATE,'YYYY') FROM EMP;
SELECT ENAME, EXTRACT(YEAR FROM HIREDATE) FROM EMP; --년도만 추축하는 함수
SELECT ENAME, EXTRACT(MONTH FROM HIREDATE) FROM EMP;

--(7)그외
--LEVEL, START WITH, CONNECT BY PRIOR
SELECT LEVEL,LPAD(' ',LEVEL*2)||'>'||ENAME, MGR FROM EMP
    WHERE ENAME!='SCOTT' 
    START WITH MGR IS NULL
    CONNECT BY PRIOR EMPNO = MGR; -- 윗레벨과 아랫레벨의 연결조건

